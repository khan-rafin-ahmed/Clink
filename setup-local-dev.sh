#!/bin/bash

# 🚀 Thirstee Local Development Setup Script
# This script helps set up consistent localhost development environment

set -e

echo "🍺 Setting up Thirstee for local development..."
echo ""

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${GREEN}✅ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}⚠️  $1${NC}"
}

print_error() {
    echo -e "${RED}❌ $1${NC}"
}

print_info() {
    echo -e "${BLUE}ℹ️  $1${NC}"
}

# Check if we're in the right directory
if [ ! -f "frontend/package.json" ]; then
    print_error "Please run this script from the root of the Thirstee project"
    exit 1
fi

print_info "Checking prerequisites..."

# Check if Node.js is installed
if ! command -v node &> /dev/null; then
    print_error "Node.js is not installed. Please install Node.js 18+ first."
    exit 1
fi

# Check Node.js version
NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 18 ]; then
    print_error "Node.js version 18+ is required. Current version: $(node -v)"
    exit 1
fi

print_status "Node.js $(node -v) is installed"

# Check if Docker is running
if ! docker info &> /dev/null; then
    print_error "Docker is not running. Please start Docker Desktop first."
    exit 1
fi

print_status "Docker is running"

# Check if Supabase CLI is installed
if ! command -v supabase &> /dev/null; then
    print_warning "Supabase CLI is not installed. Installing..."
    
    # Try to install via npm
    if command -v npm &> /dev/null; then
        npm install -g supabase
        print_status "Supabase CLI installed via npm"
    else
        print_error "Please install Supabase CLI manually:"
        print_info "  macOS: brew install supabase/tap/supabase"
        print_info "  Other: npm install -g supabase"
        exit 1
    fi
else
    print_status "Supabase CLI is installed"
fi

# Navigate to project root
cd "$(dirname "$0")"

# Initialize Supabase if not already done
if [ ! -f "supabase/config.toml" ]; then
    print_info "Initializing Supabase..."
    supabase init
    print_status "Supabase initialized"
else
    print_status "Supabase already initialized"
fi

# Start Supabase
print_info "Starting local Supabase (this may take a few minutes)..."
supabase start

# Get Supabase status
print_info "Getting Supabase credentials..."
SUPABASE_STATUS=$(supabase status)
echo "$SUPABASE_STATUS"

# Extract URL and anon key
SUPABASE_URL=$(echo "$SUPABASE_STATUS" | grep "API URL" | awk '{print $3}')
SUPABASE_ANON_KEY=$(echo "$SUPABASE_STATUS" | grep "anon key" | awk '{print $3}')

if [ -z "$SUPABASE_URL" ] || [ -z "$SUPABASE_ANON_KEY" ]; then
    print_error "Failed to extract Supabase credentials"
    exit 1
fi

# Create .env.local file
print_info "Creating .env.local file..."
cd frontend

cat > .env.local << EOF
# Local Development Environment Configuration
# Generated by setup-local-dev.sh on $(date)

# Local Development Server
VITE_API_URL=http://localhost:3000

# Local Supabase Configuration
VITE_SUPABASE_URL=$SUPABASE_URL
VITE_SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY

# Mapbox Configuration
VITE_MAPBOX_ACCESS_TOKEN=pk.eyJ1Ijoicm91Z2hpbiIsImEiOiJjbWJiMWh0a2YwdTVjMmtwcm5ubzI2MnpnIn0.zZ7-Pto8J7YiWZJzxf7kvQ
VITE_MAPBOX_STYLE_URL=mapbox://styles/roughin/cmbb1ow4o001b01r0aux92662

# Google Maps API Key
VITE_GOOGLE_MAPS_API_KEY=AIzaSyCVLfUisS_C1pG3OYHg9MeCXYRfnAO00y8

# Environment Detection
VITE_ENVIRONMENT=local
EOF

print_status ".env.local file created"

# Install dependencies
print_info "Installing frontend dependencies..."
npm install
print_status "Dependencies installed"

echo ""
echo "🎉 Local development setup complete!"
echo ""
print_status "Your Thirstee app is ready for local development"
echo ""
print_info "Next steps:"
echo "  1. cd frontend"
echo "  2. npm run dev"
echo "  3. Open http://localhost:3000"
echo ""
print_info "Supabase Studio: http://localhost:54323"
print_info "Local API URL: $SUPABASE_URL"
echo ""
print_warning "To configure Google OAuth for local development:"
print_info "  1. Add http://localhost:3000/auth/callback to your Google OAuth settings"
print_info "  2. Configure Google provider in Supabase Studio"
print_info "  3. See LOCAL_DEVELOPMENT_SETUP.md for detailed instructions"
echo ""
print_info "To stop Supabase later: supabase stop"
